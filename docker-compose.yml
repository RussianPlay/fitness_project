version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn fitness_project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120 --access-logfile - --error-logfile - --log-level info"
    volumes:
      - .:/app
      - static_volume:/app/fitness_project/staticfiles
      - media_volume:/app/fitness_project/media
    working_dir: /app/fitness_project
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - DJANGO_SETTINGS_MODULE=fitness_project.settings
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
      - PROMETHEUS_MULTIPROC_DIR=/tmp
    depends_on:
      - db
      - prometheus
    networks:
      - app_network
      - monitoring_network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=fitness_db
      - POSTGRES_USER=fitness_user
      - POSTGRES_PASSWORD=fitness_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fitness_user -d fitness_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring_network

volumes:
  postgres_data:
  static_volume:
  media_volume:
  prometheus_data:
  grafana_data:

networks:
  app_network:
  monitoring_network: 